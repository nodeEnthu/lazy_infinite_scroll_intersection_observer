{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport \"../styles/components/visible-area.scss\";\nimport ReactDOM from \"react-dom\";\n\nvar VisibleArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VisibleArea, _React$Component);\n\n  function VisibleArea(props) {\n    var _this;\n\n    _classCallCheck(this, VisibleArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VisibleArea).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"currentScrollPosition\", 0);\n\n    _this.state = {\n      currentImageindex: 1\n    };\n    _this.intersectionCallback = _this.intersectionCallback.bind(_assertThisInitialized(_this));\n    _this.configureInsertedElement = _this.configureInsertedElement.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(VisibleArea, [{\n    key: \"intersectionCallback\",\n    value: function intersectionCallback(entries, observer) {\n      var _this2 = this;\n\n      var self = this;\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          // append the current row in visible area\n          var divToAppendReactElement = document.createElement('div');\n          divToAppendReactElement.id = \"dom\".concat(_this2.currentScrollPosition);\n          var newElement = ReactDOM.render(self.configureInsertedElement(), divToAppendReactElement);\n          var parentNode = entry.target.parentNode;\n          var target = document.getElementById(\"end-sentinel\".concat(_this2.currentScrollPosition)); // append the element just before the sentinel\n\n          parentNode.insertBefore(newElement, target); //unobserve the current seltinel\n\n          observer.unobserve(entry.target); // set the new intersection observers\n\n          console.log(_this2.currentScrollPosition);\n          _this2.currentScrollPosition = _this2.currentScrollPosition + 1;\n          target.id = \"end-sentinel\".concat(_this2.currentScrollPosition);\n\n          _this2.lazyLoadImageRow();\n        }\n      });\n    }\n  }, {\n    key: \"lazyLoadImageRow\",\n    value: function lazyLoadImageRow() {\n      var observerOptions = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 1.0\n      };\n      var target = document.getElementById(\"end-sentinel\".concat(this.currentScrollPosition));\n      var observer = new IntersectionObserver(this.intersectionCallback, observerOptions);\n      observer.observe(target);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.lazyLoadImageRow();\n    }\n  }, {\n    key: \"configureInsertedElement\",\n    value: function configureInsertedElement() {\n      var currentImageindex = this.state.currentImageindex;\n      var firstImageInRow = currentImageindex + this.currentScrollPosition * 3;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col-1-3 image-no-show-wrapper\"\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: \"https://picsum.photos/200/200?random=\".concat(firstImageInRow, \".jpg\")\n      })), React.createElement(\"div\", {\n        className: \"col-1-3 image-no-show-wrapper\"\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: \"https://picsum.photos/200/200?random=\".concat(firstImageInRow + 1, \".jpg\")\n      })), React.createElement(\"div\", {\n        className: \"col-1-3 image-no-show-wrapper\"\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: \"https://picsum.photos/200/200?random=\".concat(firstImageInRow + 2, \".jpg\")\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"div\", {\n        id: \"end-sentinel0\"\n      }));\n    }\n  }]);\n\n  return VisibleArea;\n}(React.Component);\n\nexport default VisibleArea;","map":null,"metadata":{},"sourceType":"module"}