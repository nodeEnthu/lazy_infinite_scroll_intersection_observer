{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gautammehra/dev/Lazy_Intersection_Observer/components/VisibleArea.js\";\nimport React from \"react\";\nimport \"../styles/components/visible-area.scss\";\nimport ReactDOM from \"react-dom\";\n\nvar VisibleArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VisibleArea, _React$Component);\n\n  function VisibleArea(props) {\n    var _this;\n\n    _classCallCheck(this, VisibleArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VisibleArea).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"currentScrollPosition\", 0);\n\n    _this.state = {\n      currentImageindex: 1\n    };\n    _this.intersectionCallback = _this.intersectionCallback.bind(_assertThisInitialized(_this));\n    _this.configureInsertedElement = _this.configureInsertedElement.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(VisibleArea, [{\n    key: \"intersectionCallback\",\n    value: function intersectionCallback(entries, observer) {\n      var _this2 = this;\n\n      var self = this;\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          // append the current row in visible area\n          var divToAppendReactElement = document.createElement('div');\n          divToAppendReactElement.id = \"dom\".concat(_this2.currentScrollPosition);\n          var newElement = ReactDOM.render(self.configureInsertedElement(), divToAppendReactElement);\n          var parentNode = entry.target.parentNode;\n          var target = document.getElementById(\"end-sentinel\".concat(_this2.currentScrollPosition)); // append the element just before the sentinel\n\n          parentNode.insertBefore(newElement, target); //unobserve the current seltinel\n\n          observer.unobserve(entry.target); // set the new intersection observers\n\n          console.log(_this2.currentScrollPosition);\n          _this2.currentScrollPosition = _this2.currentScrollPosition + 1;\n          target.id = \"end-sentinel\".concat(_this2.currentScrollPosition);\n\n          _this2.lazyLoadImageRow();\n        }\n      });\n    }\n  }, {\n    key: \"lazyLoadImageRow\",\n    value: function lazyLoadImageRow() {\n      var observerOptions = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 1.0\n      };\n      var target = document.getElementById(\"end-sentinel\".concat(this.currentScrollPosition));\n      var observer = new IntersectionObserver(this.intersectionCallback, observerOptions);\n      observer.observe(target);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.lazyLoadImageRow();\n    }\n  }, {\n    key: \"configureInsertedElement\",\n    value: function configureInsertedElement() {\n      var currentImageindex = this.state.currentImageindex;\n      var firstImageInRow = currentImageindex + this.currentScrollPosition * 3;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1-3 image-no-show-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: \"https://picsum.photos/200/200?random=\".concat(firstImageInRow, \".jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-1-3 image-no-show-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: \"https://picsum.photos/200/200?random=\".concat(firstImageInRow + 1, \".jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-1-3 image-no-show-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: \"https://picsum.photos/200/200?random=\".concat(firstImageInRow + 2, \".jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"end-sentinel0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VisibleArea;\n}(React.Component);\n\nexport default VisibleArea;","map":{"version":3,"sources":["/Users/gautammehra/dev/Lazy_Intersection_Observer/components/VisibleArea.js"],"names":["React","ReactDOM","VisibleArea","props","state","currentImageindex","intersectionCallback","bind","configureInsertedElement","entries","observer","self","forEach","entry","isIntersecting","divToAppendReactElement","document","createElement","id","currentScrollPosition","newElement","render","parentNode","target","getElementById","insertBefore","unobserve","console","log","lazyLoadImageRow","observerOptions","root","rootMargin","threshold","IntersectionObserver","observe","firstImageInRow","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/components/visible-area.scss\";\nimport ReactDOM from \"react-dom\";\n\nclass VisibleArea extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      currentImageindex: 1,\n    };\n\n    this.intersectionCallback  =  this.intersectionCallback.bind(this);\n    this.configureInsertedElement  =  this.configureInsertedElement.bind(this);\n  }\n  currentScrollPosition = 0;\n\n  intersectionCallback(entries, observer) {\n    const self = this;\n    entries.forEach(entry => {\n      if(entry.isIntersecting) {\n        // append the current row in visible area\n        const divToAppendReactElement = document.createElement('div');\n        divToAppendReactElement.id = `dom${this.currentScrollPosition}`;\n        const newElement = ReactDOM.render(self.configureInsertedElement(), divToAppendReactElement);\n        const parentNode = entry.target.parentNode;\n        const target = document.getElementById(`end-sentinel${this.currentScrollPosition}`);\n        // append the element just before the sentinel\n        parentNode.insertBefore(newElement, target);\n        //unobserve the current seltinel\n        observer.unobserve(entry.target);\n        // set the new intersection observers\n        console.log(this.currentScrollPosition);\n        this.currentScrollPosition = this.currentScrollPosition + 1;\n        target.id = `end-sentinel${this.currentScrollPosition}`;\n        this.lazyLoadImageRow();\n        \n      }\n    })\n  }\n\n  lazyLoadImageRow() {\n    let observerOptions = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n  \n    const target = document.getElementById(`end-sentinel${this.currentScrollPosition}`);\n    const observer = new IntersectionObserver(this.intersectionCallback, observerOptions);\n    observer.observe(target);\n  }\n\n  componentDidMount() {\n    this.lazyLoadImageRow();\n  }\n\n  configureInsertedElement() {\n    const { currentImageindex } = this.state;\n    const firstImageInRow = currentImageindex + (this.currentScrollPosition * 3);\n    return <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col-1-3 image-no-show-wrapper\">\n          <img className=\"image\" src={`https://picsum.photos/200/200?random=${firstImageInRow}.jpg`}/>\n        </div>\n        <div className=\"col-1-3 image-no-show-wrapper\">\n          <img className=\"image\" src={`https://picsum.photos/200/200?random=${firstImageInRow + 1}.jpg`}/>\n        </div>\n        <div className=\"col-1-3 image-no-show-wrapper\">\n          <img className=\"image\" src={`https://picsum.photos/200/200?random=${firstImageInRow + 2}.jpg`}/>\n        </div>\n      </div>\n    </React.Fragment>\n  }\n\n  render() {\n    return <div className=\"container\">\n          <div id= \"end-sentinel0\"></div>\n      </div>\n  }\n}\n\nexport default VisibleArea;"]},"metadata":{},"sourceType":"module"}